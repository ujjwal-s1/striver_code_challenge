You are given two integer arrays nums1 and nums2, 
sorted in non-decreasing order, and two integers m and n, 
representing the number of elements in nums1 and nums2 respectively.
Merge nums1 and nums2 into a single array sorted in non-decreasing order.

# GAP Method
def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        for i in range(n):
            nums1[m+i] = nums2[i]
        
        # GAP Method
        gap = len(nums1)
        gap = gap//2 + gap%2
        while gap>0:
            for i in range(m+n-gap):
                if i+gap<m+n and nums1[i] > nums1[i+gap]:
                    nums1[i], nums1[i+gap] = nums1[i+gap], nums1[i]
            if gap==1:
                gap = 0
            gap = (gap // 2) + (gap % 2)

# My method
def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        m1 = len(nums1)
        if m1 == m:
            return
        zero = m1 - m
        for i in range(m1-1, 0, -1):
            if (i - zero)<0:
                break
            nums1[i], nums1[i-zero] = nums1[i-zero], nums1[i]
        j = 0
        k = zero
        for i in range(m1):
            print("nums1 = ", i, nums1)
            print("nums2 = ", j, nums2)
            if k < m1 and j<n and nums1[k] <= nums2[j]: 
                nums1[i] = nums1[k]
                nums1[k] = 99999
                k+=1
            elif j < n and i+zero <m1 and nums1[k] > nums2[j]:
                nums1[i] = nums2[j]
                nums2[j] = 9999
                j+=1
            elif j<n:
                nums1[i] = nums2[j]
                nums2[j] = 'x'
                j+=1


